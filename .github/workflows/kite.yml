name: KiteApp

on:
  push:         { branches: [ master ] }
  pull_request: { branches: [ master ] }

jobs:

  build-Android:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v2
        with: { channel: stable, cache: true } # channel: 'stable', 'beta' or 'master'

      - name: 📌 Restore pub & build cache
        uses: actions/cache@v2
        with:
          path: &cache_build_path |
            ~/.pub-cache/
            .dart_tool/
            build/
            .flutter-plugins
            .flutter-plugins-dependencies
            .packages
            pubspec.lock
          key: &cache_build_key build-${{ runner.os }}-${{ github.sha }}
          restore-key: build-${{ runner.os }}-

      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: flutter pub run flutter_native_splash:create

      - name: 🏗️ Build apk (arm64 only)
        run: flutter build apk --split-per-abi --target-platform android-arm64

      - name: 🚚 Move outputs
        run: |
          mv ./build/app/outputs/ ./outputs/
          mv ./build/app/reports/ ./outputs/reports/

      - name: 📌 Cache outputs
        uses: actions/cache@v2
        with:
          path: &cache_outputs_path build/app/outputs/
          key: &cache_outputs_key apk-${{ github.ref }}-${{ github.sha }}

      - name: 📌 Cache pub & build
        uses: actions/cache@v2
        with:
          path: *cache_build_path
          key:  *cache_build_key

  build-iOS:
    runs-on: macos-latest
    steps:

    - uses: actions/checkout@v2

    - uses: maxim-lobanov/setup-xcode@v1
      with: { xcode-version: latest-stable }

    - uses: subosito/flutter-action@v2
      with: { channel: 'stable', cache: true } # or: 'beta' or 'master'

    - run: flutter pub get
    - run: flutter pub run build_runner build
    - run: flutter pub run flutter_native_splash:create
    - run: flutter build ios --no-codesign

  upload:
    runs-on: ubuntu-latest
    needs:
      - build-Android
      - build-iOS
    steps:

      - uses: nelonoel/branch-name@v1.0.1

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with: { length: 7 }

      - name: 📌 Get apk from cache
        uses: actions/cache@v2
        with:
          path: *cache_outputs_path # build/app/outputs/
          key: *cache_outputs_key

      - name: ✏️ Rename apk file
        run: |
          cd build/app/outputs/flutter-apk/
          mv app-arm64-v8a-release.apk ${{ env.BRANCH_NAME }}-${{ env.SHA }}-arm64-v8a-release.apk

      - name: 🤖 Upload apk by bot
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          document: build/app/outputs/flutter-apk/${{ env.BRANCH_NAME }}-${{ env.SHA }}-arm64-v8a-release.apk
          message: "🚀 Apk Build by Github Actions"

  notification:
    runs-on: ubuntu-latest
    needs: [ upload ]
    if: always()
    steps:

      - uses: technote-space/workflow-conclusion-action@v2

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with: { length: 7 }

      - name: 🤖 Telegram Notification
        if: env.WORKFLOW_CONCLUSION == 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            🎉 [KiteApp](https://github.com/SIT-kite/kite-app)  Build  *${{ env.WORKFLOW_CONCLUSION }}*

            Author: *${{ github.actor }}*

            Message: *${{ github.event.head_commit.message }}*

            Commit: [${{ env.SHA }}](https://github.com/${{ github.repository }}/commit/${{ env.SHA }})

      - name: 🤖 Telegram Notification
        if: env.WORKFLOW_CONCLUSION != 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            🔴 [KiteApp](https://github.com/SIT-kite/kite-app)  Build  *${{ env.WORKFLOW_CONCLUSION }}*

            Author: *${{ github.actor }}*

            Message: *${{ github.event.head_commit.message }}*

            Commit: [${{ env.SHA }}](https://github.com/${{ github.repository }}/commit/${{ env.SHA }})
