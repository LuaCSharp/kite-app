name: KiteApp

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-Android:
  
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # or: 'beta' or 'master'
      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: flutter pub run flutter_native_splash:create
      - run: flutter build apk
      
      - name: send apk
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          message: ${{ github.head_ref }}.${{ github.sha }}
          document: build/app/outputs/flutter-apk/app-release.apk
      
  build-iOS:
  
    runs-on: macos-latest
    continue-on-error: true
    
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # or: 'beta' or 'master'

    - run: flutter pub get
    - run: flutter pub run build_runner build
    - run: flutter pub run flutter_native_splash:create
    - run: flutter build ios --no-codesign
    
  telegram:
    runs-on: ubuntu-latest
    if: always()
    needs: 
      - build-Android
      - build-iOS
    steps:
    - name: fail telegram notification
      if: ${{ jobs.build-iOS.status != 'success' || jobs.build-Android.status != 'success' }}
      uses: xinthink/action-telegram@v1.1
      with:
        botToken: ${{ secrets.BOT_TOKEN }}
        chatId: ${{ secrets.CHAT_ID }}
        jobStatus: "failure"
        skipSuccess: false
        
    - name: telegram notification
      if: ${{ jobs.build-iOS.status == 'success' && jobs.build-Android.status == 'success' }}
      uses: xinthink/action-telegram@v1.1
      with:
        botToken: ${{ secrets.BOT_TOKEN }}
        chatId: ${{ secrets.CHAT_ID }}
        skipSuccess: false

