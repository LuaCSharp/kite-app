name: KiteApp

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-Android:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # or: 'beta' or 'master'
      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: flutter pub run flutter_native_splash:create
      - run: flutter build apk --split-per-abi
      - name: ðŸ“Œ Cache build apk
        uses: actions/cache@v2
        with:
          path: |
            build/
          key: apk-${{ github.ref }}-${{ github.sha }}


  build-iOS:

    runs-on: macos-latest

    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # or: 'beta' or 'master'

    - run: flutter pub get
    - run: flutter pub run build_runner build
    - run: flutter pub run flutter_native_splash:create
    - run: flutter build ios --no-codesign

  upload:
    runs-on: ubuntu-latest
    needs:
      - build-Android
      - build-iOS
    steps:
      - uses: nelonoel/branch-name@v1.0.1
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with: { length: 7 }
      - name: ðŸ“Œ Get cache build apk
        uses: actions/cache@v2
        with:
          path: |
            build/
          key: apk-${{ github.ref }}-${{ github.sha }}

      - run: cd build/app/outputs/flutter-apk/ && mv app-arm64-v8a-release.apk ${{ env.BRANCH_NAME }}-${{ env.SHA }}-arm64-v8a-release.apk
      - name: ðŸ¤– Upload Apk by Bot
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          document: build/app/outputs/flutter-apk/${{ env.BRANCH_NAME }}-${{ env.SHA }}-arm64-v8a-release.apk

  notification:
    runs-on: ubuntu-latest
    needs:
      - upload
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with: { length: 7 }

      - name: ðŸ¤– Telegram Notification
        if: env.WORKFLOW_CONCLUSION == 'failure'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            ðŸ”´ [KiteApp](https://github.com/SIT-kite/kite-app)  Build  *${{ env.WORKFLOW_CONCLUSION }}*

            Author: *${{ github.actor }}*

            Message: *${{ github.event.head_commit.message }}*

            Commit: [${{ env.SHA }}](https://github.com/${{ github.repository }}/commit/${{ env.SHA }})

      - name: ðŸ¤– Telegram Notification
        if: env.WORKFLOW_CONCLUSION != 'failure'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            ðŸŽ‰ [KiteApp](https://github.com/SIT-kite/kite-app)  Build  *${{ env.WORKFLOW_CONCLUSION }}*

            Author: *${{ github.actor }}*

            Message: *${{ github.event.head_commit.message }}*

            Commit: [${{ env.SHA }}](https://github.com/${{ github.repository }}/commit/${{ env.SHA }})
